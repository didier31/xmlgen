<?xml version="1.0" encoding="utf-8"?>

<!DOCTYPE html
   PUBLIC "-//W3C//DTD XHTML 1.1//EN"
   "http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd" >

<html xmlns="http://www.w3.org/1999/xhtml">
  <head>
    <title><?gen clazz.name.toUpperFirst() ?></title>

    <meta content="??/??/????" name="date"><?gen attr content = date ?></meta>

    <meta content="???" name="keywords"><?gen attr content = title ?></meta>

    <link href="files/stylesheet.css" rel="stylesheet" title="Style"
          type="text/css"><?gen attr href = config + '/files/stylesheet.css' ?></link>

    <script src="files/script.js" type="text/javascript"
            xml:space="preserve">
			<?gen attr src = config + '/files/script.js' ?>
			</script>
  </head>

  <body>
  <?gen begin
        methods = clazz.ownedOperation->select(m | m.getAppliedStereotype('StandardProfile::Create') = null),
        table_methodIds_cat = Sequence{}
?>
    <?gen [Loop] method : methods ?>
      <?gen begin when method.isAbstract 
            categories = 4
      ?>
      <?gen end export: categories ?>
      <?gen begin when not method.isAbstract 
            categories = 8
      ?>
      <?gen end export: categories ?>
      <?gen begin when method.isStatic 
            categories = categories + 1
      ?>
      <?gen end export: categories ?>
      <?gen begin when not method.isStatic 
            categories = categories + 2
      ?> 
      <?gen end export: categories ?>
      <?gen begin
            table_methodIds_cat = table_methodIds_cat->including('"' + method.id() + '":' + categories)
      ?>
      <?gen end export: table_methodIds_cat ?>
    <?gen [Loop] end export: table_methodIds_cat ?>
  <script type="text/javascript" xml:space="preserve">// <?gen '<![CDATA[
    try {
        if (location.href.indexOf(\'is-external=true\') == -1) {
            parent.document.title="' + clazz.name + '";
        }
    }
    catch(err) {
    }
	var methods = {' + table_methodIds_cat->sep(',')->toString() + '};
	var tabs = {65535:["t0","All Methods"],1:["t1","Static Methods"],2:["t2","Instance Methods"],8:["t4","Concrete Methods"]};
	var altColor = "altColor";
	var rowColor = "rowColor";
	var tableTab = "tableTab";
	var activeTableTab = "activeTableTab";	
//]]>' ?> 
</script>
<?gen end ?>
 <noscript> &lt;div&gt;JavaScript is disabled on your
  browser.&lt;/div&gt; </noscript> <!--  ========= START OF TOP NAVBAR ======= -->
    <div class="topNav">
      <a id="navbar.top">
       <!--  --> </a>
      <div class="skipNav">
        <a
        href="http://download.eclipse.org/modeling/mdt/uml2/javadoc/5.1.0/org/eclipse/uml2/uml/profile/standard/StandardPlugin.html#skip.navbar.top"
        title="Skip navigation links">Skip navigation links</a>
      </div>
      <a id="navbar.top.firstrow">
       <!--  --> </a>
      <ul class="navList" title="Navigation">
        <li>
          <a
          href="???">
		  <?gen attr href = url + '/' + outputFilename ?>
		  Overview		  
		  </a>
		  
        </li>
        <li>
          <a
          href="???">
		  <?gen attr href = url + '/' + outPackagefilename ?>
		  Package
		  </a>
        </li>
        <li class="navBarCell1Rev">
          Class
        </li>
        <li>
          <a
          href="http://download.eclipse.org/modeling/mdt/uml2/javadoc/5.1.0/org/eclipse/uml2/uml/profile/standard/class-use/StandardPlugin.html">Use</a>
        </li>
        <li>
          <a
          href="http://download.eclipse.org/modeling/mdt/uml2/javadoc/5.1.0/org/eclipse/uml2/uml/profile/standard/package-tree.html">Tree</a>
        </li>
        <li>
          <a
          href="http://download.eclipse.org/modeling/mdt/uml2/javadoc/5.1.0/deprecated-list.html">Deprecated</a>
        </li>
        <li>
          <a
          href="http://download.eclipse.org/modeling/mdt/uml2/javadoc/5.1.0/index-files/index-1.html">Index</a>
        </li>
        <li>
          <a
          href="http://download.eclipse.org/modeling/mdt/uml2/javadoc/5.1.0/help-doc.html">Help</a>
        </li>
      </ul>
    </div>
    <div class="subNav">
	  <?gen classifier_navigation def previousClass : uml::Classifier, 
                                      nextClass : uml::Classifier
      ?>
      <?gen [ClassifierNavigation] begin
	                               when previousClass <> null or nextClass <> null 	                                        
	  ?>
      <ul class="navList">
		<?gen classifier_link_button def neighborClass : uml::Classifier, linkText : String
        ?>									 
		<?gen [WithNeighborClass] begin 
		                          when neighborClass <> null		         	
		         classFilename = name + '.' + neighborClass.name + '_details.xhtml',
		         classifierTypeStr = if neighborClass.oclIsKindOf(uml::Interface) then
				                        'interface '
				   				     else if neighborClass.oclIsKindOf(uml::Class) then
				                        'class '
									 else
									    ''
									 endif
									 endif									   
		  ?>
        <li>
          <a
          href="reference to class details doc"
          title="classifierType in package name">
		  <?gen attr href = url + '/' + classFilename ?>
		  <?gen attr title = classifierTypeStr + ' in ' + name ?>
		  <span
          class="typeNameLink"> <?gen linkText ?> </span></a>
        </li>
		<?gen [WithNeighborClass] end ?>
		
		<?gen [WithoutNeighborClass] begin when neighborClass = null ?>
        <li> <?gen linkText ?> </li>
		<?gen [WithoutNeighborClass] end ?>
		<?gen classifier_link_button end ?>
        <?gen <Insert classifier_link_button previousClass, 'Prev Class'> ?>
			
		<?gen <Insert classifier_link_button nextClass, 'Next Class'> ?>
      </ul>
	  <?gen [ClassifierNavigation] end ?>
      <?gen classifier_navigation end ?>
      <?gen <Insert classifier_navigation previousClass, nextClass> ?>
      <ul class="navList">
        <li>
          <a
          href="http://download.eclipse.org/modeling/mdt/uml2/javadoc/5.1.0/index.html?org/eclipse/uml2/uml/profile/standard/StandardPlugin.html">Frames</a>
        </li>
        <li>
          <a
          href="http://download.eclipse.org/modeling/mdt/uml2/javadoc/5.1.0/org/eclipse/uml2/uml/profile/standard/StandardPlugin.html">No Frames</a>
        </li>
      </ul>
      <ul class="navList" id="allclasses_navbar_top" style="display: block;">
        <li>
          <a
          href="http://download.eclipse.org/modeling/mdt/uml2/javadoc/5.1.0/allclasses-noframe.html">All Classes</a>
        </li>
      </ul>
      <div><script type="text/javascript" xml:space="preserve">//<![CDATA[
  allClassesLink = document.getElementById("allclasses_navbar_top");
  if(window==top) {
    allClassesLink.style.display = "block";
  }
  else {
    allClassesLink.style.display = "none";
  }
  //
//]]></script>
      </div>
      <div>
        <ul class="subNavList">
          <li>
            Summary: 
          </li>
          <li>
            <a
            href="http://download.eclipse.org/modeling/mdt/uml2/javadoc/5.1.0/org/eclipse/uml2/uml/profile/standard/StandardPlugin.html#nested.class.summary">Nested</a> | 
          </li>
          <li>
            <a
            href="http://download.eclipse.org/modeling/mdt/uml2/javadoc/5.1.0/org/eclipse/uml2/uml/profile/standard/StandardPlugin.html#field.summary">Field</a> | 
          </li>
          <li>
            <a
            href="http://download.eclipse.org/modeling/mdt/uml2/javadoc/5.1.0/org/eclipse/uml2/uml/profile/standard/StandardPlugin.html#constructor.summary">Constr</a> | 
          </li>
          <li>
            <a
            href="http://download.eclipse.org/modeling/mdt/uml2/javadoc/5.1.0/org/eclipse/uml2/uml/profile/standard/StandardPlugin.html#method.summary">Method</a>
          </li>
        </ul>
        <ul class="subNavList">
          <li>
            Detail: 
          </li>
          <li>
            <a
            href="http://download.eclipse.org/modeling/mdt/uml2/javadoc/5.1.0/org/eclipse/uml2/uml/profile/standard/StandardPlugin.html#field.detail">Field</a> | 
          </li>
          <li>
            <a
            href="http://download.eclipse.org/modeling/mdt/uml2/javadoc/5.1.0/org/eclipse/uml2/uml/profile/standard/StandardPlugin.html#constructor.detail">Constr</a> | 
          </li>
          <li>
            <a
            href="http://download.eclipse.org/modeling/mdt/uml2/javadoc/5.1.0/org/eclipse/uml2/uml/profile/standard/StandardPlugin.html#method.detail">Method</a>
          </li>
        </ul>
      </div>
      <a id="skip.navbar.top">
       <!--  --> </a>
    </div>
    <!--  ========= END OF TOP NAVBAR ========= -->
    <!--  ======== START OF CLASS DATA ======== -->
    <div class="header">
      <div class="subTitle">
        <?gen name ?>
      </div>
      <h2 title="Class ???" class="title">
	    <?gen attr title = 'Class ' + clazz.name ?>
        <?gen 'Class ' + clazz.name ?>
      </h2>
    </div>
    <div class="contentContainer">	
	
	<?gen [InheritageHierarchy] begin when clazz.oclIsKindOf(uml::Class) or clazz.oclIsKindOf(uml::Interface)
	?>
	<?gen [Descendants] begin
	                    ancestors = clazz.ancestors(),
                     	descendants = ancestors->reverse() + Sequence{ clazz }
    ?> 
    
	<?gen [DirectDescendants] begin when descendants <> null and not descendants->isEmpty()
    
    directDescendants = descendants->first(), 
    descendants = (if descendants->size() > 1 then 
                      descendants->asSequence()->subSequence(2, descendants->size()) 
                   else 
                      Sequence{}
                   endif)
   ?>
      <ul class="inheritance">
        <li>
		<?gen [Descendant] begin directDescNames = directDescendants->collect(c : uml::Classifier | c.qualifiedName) ?>
         <?gen directDescNames->collect(name : String | name.replaceAll('::', '.').replace('[^\\.]*\\.', ''))->sep(', ')->toString() ?>
		 <?gen [Descendant] end ?>
        </li>
		<?gen [SubsequentDescendance] begin when not descendants->isEmpty() ?>
        <li>
          <?gen <Insert [DirectDescendants]> ?>
        </li>
		<?gen [SubsequentDescendance] end ?>
      </ul>
	  <?gen [DirectDescendants] end ?> 
	  <?gen [Descendants] end export: ancestors ?>
	  <?gen [InheritageHierarchy] end export: ancestors ?>
	  
	  <?gen begin 
	  isEnumeration = clazz.oclIsKindOf(uml::Enumeration)
	  ?>
	  <?gen [InterfaceRealization] begin when clazz.oclIsKindOf(uml::Class) and not isEnumeration ?>
      <?gen begin when clazz.interfaceRealization <> null ?>
	  <?gen begin when not clazz.interfaceRealization->isEmpty() ?>
      <div class="description">
        <ul class="blockList">
          <li class="blockList">
		  <?gen [Implemented_Interfaces] begin when not clazz.interfaceRealization->isEmpty()
		                                    interfaces = clazz.interfaceRealization->collect(ir : uml::InterfaceRealization | ir.supplier)
		  ?>
            <dl>
              <dt>
                All Implemented Interfaces:
              </dt>
              <dd>
                <?gen interfaces->collect(i : uml::Interface | i.qualifiedName.replaceAll('::', '.').replace('[^\\.]*\\.', ''))->sep(', ')->toString() ?>
              </dd>
            </dl>
			<?gen [Implemented_Interfaces] end ?>
            <hr />
            <br />
<pre xml:space="preserve">
                          <?gen qualifiers def classifier : uml::Classifier ?>
                          <?gen if classifier.visibility <> uml::VisibilityKind::package then 
                                      classifier.visibility.toString() + ' '
                                   else
                                      ' '								   
								   endif 
						  ?> 
						  <?gen if classifier.isAbstract then 
						              'abstract ' 
                                   else
                                      ''									  
						           endif 
					      ?> 
						  <?gen if classifier.isFinalSpecialization then 
						              'final '
                                   else
                                      ''									  
								   endif
  					      ?>
						  <?gen qualifiers end ?><?gen <Insert qualifiers clazz> ?>class <span class="typeNameLabel"><?gen clazz.name ?></span>
			  <?gen begin 
			           generalNames = clazz.general->collect(c : uml::Classifier | c.qualifiedName.replaceAll('::', '.').replace('[^\\.]*\\.', ''))
			  ?>
			  <?gen begin when generalNames <> null and not generalNames->isEmpty() 
			           generalNamesStr = generalNames->sep(', ')->toString()
			  ?>
extends <?gen generalNamesStr ?>
              <?gen end ?>
			  <?gen end ?>
</pre>
            <?gen comment : clazz.ownedComment ?>
            <div class="block">
			<?gen comment.literalComment() ?>
               <!--  begin-user-doc -->
               <!--  end-user-doc -->
            </div>
          </li>
        </ul>
      </div>
	  <?gen end ?>
	  <?gen end ?>
	  <?gen [InterfaceRealization] end ?>
      <div class="summary">
        <ul class="blockList">
          <li class="blockList">
		    <?gen [NestedClasses] begin when clazz.oclIsKindOf(uml::Class) ?>
            <!--  ======== NESTED CLASS SUMMARY ======== -->
            <ul class="blockList">
			  <?gen nestedClass : clazz.nestedClassifier ?>
              <li class="blockList">
                <a id="nested.class.summary">
                 <!--  --> </a>
                <h3>
                  Nested Class Summary
                </h3>
                <table class="memberSummary" border="0" cellpadding="3" cellspacing="0" summary="Nested Class Summary table, listing nested classes, and an explanation">
                  <caption>
                    <span>Nested Classes</span><span class="tabEnd"> </span>
                  </caption>
                  <tbody>
                    <tr>
                      <th class="colFirst" scope="col">
                        Modifier and Type
                      </th>
                      <th class="colLast" scope="col">
                        Class and Description
                      </th>
                    </tr>
                    <tr class="altColor">
                      <td class="colFirst">
                        <code>
						<?gen <Insert qualifiers nestedClass> ?>class
						</code>
                      </td>
                      <td class="colLast">					  
                        <code><span class="memberNameLink">
			   		    <?gen begin
				                 template = 'file:/' + cdir + 'class_details_template.xhtml',
				                 classfilename = name + '.' + clazz.name + '.' + nestedClass.name + '_details.xhtml',
		                         output = outputDir + '/' + classfilename,
								 clazz = nestedClass,
				                 trace = 'yes'
		                ?>
		                <?gen <Expand> 
		                ?>
		                <?gen end export: classfilename
		                ?>
						<a href="???"
                        title="class in ???">
						<?gen attr href = url + '/' + classfilename ?>
						<?gen attr title = 'class in ' + name ?>
						<?gen clazz.name + '.' + nestedClass.name ?>
						</a></span></code>
						<?gen comment : nestedClass.ownedComment ?>
                        <div class="block">
                          <?gen comment.literalComment() ?>
                        </div>
                      </td>
                    </tr>
                  </tbody>
                </table>
                <ul class="blockList">
                  <li class="blockList">
				  <?gen begin clazzQualifiedName = name + '.' + clazz.name ?>
                    <a
                    id="nested.classes.inherited.from.class.???">
                     <!--  --> 
					 <?gen attr id = 'nested.classes.inherited.from.class' + '.' + clazzQualifiedName ?>
					 </a>
                    <h3>
                      <?gen 'Nested classes/interfaces inherited from class ' + clazzQualifiedName ?>
                    </h3>
					<?gen begin
					         ancestors = clazz.general,
					         inheritedNestedClasses = ancestors->collect(c : uml::Classifier | c.nestedClassifier),
							 theirQualifiedNames = inheritedNestedClasses->collect(c : uml::Classifer | c.qualifiedName.replaceAll('::', '.').replace('[^\\.]*\\.', '')),
							 theirQualifiedNames = theirQualifiedNames->sep(', ')->toString()
					?>
                    <code>
					<?gen theirQualifiedNames ?>
					</code>
                  </li>
                </ul>
              </li>
            </ul>
			<?gen [NestedClasses] end ?>
            <!--  =========== FIELD SUMMARY =========== -->
			<?gen [Fields] begin when clazz.oclIsKindOf(uml::Class) or clazz.oclIsKindOf(uml::DataType) ?>
            <ul class="blockList">
              <li class="blockList">
                <a id="field.summary">
                 <!--  --> </a>
                <h3>
                  Field Summary
                </h3>
                <table class="memberSummary" border="0" cellpadding="3" cellspacing="0" summary="Field Summary table, listing fields, and an explanation">
                  <caption>
                    <span>Fields</span><span class="tabEnd"> </span>
                  </caption>
				  <?gen begin
				  fields = clazz.ownedAttribute,
				  class = 'rowColor' 
				  ?>
                  <tbody>
				  <?gen begin 
				        when fields <> null
				  ?>
                    <tr>
                      <th class="colFirst" scope="col">
                        Modifier and Type
                      </th>
                      <th class="colLast" scope="col">
                        Field and Description
                      </th>
                    </tr>
					<?gen [Field] begin 
				        when not fields->isEmpty()
						
						class = if class = 'altColor' then 'rowColor' else 'altColor' endif,
						field = fields->first(),
						fields = fields->subSequence(2, fields->size())
				    ?>
                    <tr class="???">
					<?gen attr class = class ?>
                      <td class="colFirst">
                        <code>
						 <?gen if field.isStatic then 
						          'static ' 
                               else
                                    ''									  
						       endif 
					      ?>
						  <?gen if field.isReadOnly then 
						          'const ' 
                               else
                                  ''									  
						       endif 
					      ?> 
						  <?gen if field.visibility <> uml::VisibilityKind::package then 
                                 field.visibility.toString() + ' '
                              else
                                   ''								   
						      endif 
						  ?> 
                          <?gen parameterType def object : uml::TypedElement ?> 
                          <?gen [WriteType] begin 
                                                  when object.type <> null
                                  type = object.type,
                                  qualifiedName = if type <> null then type.qualifiedName.replaceAll('::', '.').replace('[^\\.]*\\.', '') else 'void' endif,
                                  packageQualifiedName = type.eContainer().qualifiedName,
                                  packageQualifiedName = packageQualifiedName.replaceAll('::', '.').replace('[^\\.]*\\.', ''),
                                  isTypeInScope = allNamedElements->exists(n : uml::NamedElement | n = type)
                          ?>
                          <?gen begin when isTypeInScope                                   
                          ?>
                          <a
                          href="??? class_details.html"
                          title="class in ???">
                           <?gen attr href = url + '/' + qualifiedName + '_details.xhtml' ?>
                           <?gen attr title = 'class in ' + packageQualifiedName ?>
                           <?gen type.name ?>
                          </a>                        
                          <?gen end ?>
                          <?gen begin when not isTypeInScope ?>
                          <?gen type.name ?>
                          <?gen end ?>
                          <?gen if object.upperValue <> null then
						         if object.upperValue.isComputable() then
  						            if object.upperValue.unlimitedValue() <> '' or object.upperValue.integerValue() > 1 then
								       '[]'
								    else
								       ''
								    endif
						         else
							        ''
						         endif
							  else
							     ''
							  endif
                          ?>
                          <?gen [WriteType] end ?>
                          <?gen parameterType end ?>
                          <?gen <Insert parameterType field> ?>
                      </code>
                      </td>
                      <td class="colLast">
                        <code><span class="memberNameLink"><a
                        href="???thisFilename#???field name">
						<?gen attr href=url + '/' + classfilename + '#' + field.name ?>
						<?gen field.name ?>
						</a></span></code>
						<?gen comment : field.ownedComment ?>
                        <div class="block">
			            <?gen comment.literalComment() ?>
                        </div>
                      </td>
                    </tr>
					<?gen <Insert [Field]> ?>
                  </tbody>
                </table>
				<?gen [Fields of ancestors] begin
                                            ancestors = ancestors->flatten(),
				                            fieldsGroupedByAncestor = ancestors->collect(c | Sequence{c.ownedAttribute->select(p : uml::Property | p.visibility <> uml::VisibilityKind::private)}) ?>
				<?gen begin when not fieldsGroupedByAncestor->select(fields | not fields->isEmpty())->isEmpty() ?>
                <ul class="blockList">
				<?gen fields : fieldsGroupedByAncestor, ancestor : ancestors ?>
				  <?gen begin when not fields->isEmpty()
				        classQualifiedName = ancestor.qualifiedName.replaceAll('::', '.').replace('[^\\.]*\\.', '')
				  ?>
                  <li class="blockList">
                    <a
                    id="fields.inherited.from.class.???classQualifiedName???">
					<?gen attr id = 'fields.inherited.from.class.' + classQualifiedName ?>
                     <!--  --> </a>
                    <h3>
                      Fields inherited from class <?gen classQualifiedName ?>
                    </h3>
                    <code>
					<?gen fields->collect(p | p.name)->sep(', ')->toString() ?>
					</code>
                  </li>
                </ul>
				<?gen end ?>
				<?gen [Fields of ancestors] end ?>
              </li>
            </ul>
			<?gen [Fields] end ?>
            <!--  ======== CONSTRUCTOR SUMMARY ======== -->
			<?gen [Constructors Summary 1] begin 
			                               constructors = clazz.ownedOperation->select(op | op.getAppliedStereotype('StandardProfile::Create') <> null)
			?>
			<?gen [Constructors Summary 2] begin
			      when not constructors->isEmpty()
		    ?>
            <ul class="blockList">
              <li class="blockList">
                <a id="constructor.summary">
                 <!--  --> </a>
                <h3>
                  Constructor Summary
                </h3>
                <table class="memberSummary" border="0" cellpadding="3" cellspacing="0" summary="Constructor Summary table, listing constructors, and an explanation">
                  <caption>
                    <span>Constructors</span><span class="tabEnd"> </span>
                  </caption>
                  <tbody>
                    <tr>
                      <th class="colOne" scope="col">
                        Constructor and Description
                      </th>
                    </tr>
					<?gen begin class = 'rowColor' ?>
					<?gen constructor : constructors ?>
					<?gen begin 
					      class = if class = 'altColor' then 'rowColor' else 'altColor' endif 
				    ?>
                    <tr class="???">
					<?gen attr class = class ?>
                      <td class="colOne">
                        <code><span class="memberNameLink"><a
                        href="classfilename_details_path???#constructorID???">
						<?gen attr href = url + '/' + classfilename + '#' + constructor.id() ?>
                        <?gen if constructor.visibility <> uml::VisibilityKind::package then 
                                 constructor.visibility.toString() + ' '
                              else
                                   ''								   
						      endif 
						  ?> 
						<?gen clazz.name ?></a></span>
						<?gen begin parameters = constructor.ownedParameter,
                                    parametersStr = Sequence{} ?>
						  <?gen [Parameters loop] parameter : parameters ?> 
						  <?gen begin
						  parametersStr = parametersStr + Sequence{ parameter.type.name + ' ' + parameter.name }
						  ?>
						  <?gen end export: parametersStr ?>
						  <?gen [Parameters loop] end export: parametersStr ?>
						(<?gen parametersStr->sep(', ')->toString()?>)
						</code>
						<?gen comment : constructor.ownedComment ?>
                        <div class="block">
                          <?gen comment.literalComment() ?>
                        </div>
                      </td>
                    </tr>
					<?gen end export: class ?>
                  </tbody>
                </table>
              </li>
            </ul>
			<?gen [Constructors Summary 2] end ?>
			<?gen [Constructors Summary 1] end ?>
            <!--  ========== METHOD SUMMARY =========== -->
            <?gen [Methods Summary 1] begin 
                            methods = clazz.ownedOperation->select(m | m.getAppliedStereotype('StandardProfile::Create') = null)
            ?>
            <?gen [Methods Summary 2] begin when not methods->isEmpty() ?>
            <ul class="blockList">
              <li class="blockList">
                <a id="method.summary">
                 <!--  --> </a>
                <h3>Method Summary</h3>
                <table class="memberSummary" border="0" cellpadding="3" cellspacing="0" summary="Method Summary table, listing methods, and an explanation">
                  <caption>
                    <span id="t0" class="activeTableTab"><span>All Methods</span><span
                    class="tabEnd">&nbsp;</span></span><span
                    id="t1" class="tableTab"><span><a
                    href="javascript:show(1);">Static Methods</a></span><span
                    class="tabEnd">&nbsp;</span></span><span
                    id="t2" class="tableTab"><span><a
                    href="javascript:show(2);">Instance Methods</a></span><span
                    class="tabEnd">&nbsp;</span></span><span
                    id="t4" class="tableTab"><span><a
                    href="javascript:show(8);">Concrete Methods</a></span><span
                    class="tabEnd">&nbsp;</span></span>
                  </caption>
                  <tbody>
                    <tr>
                      <th class="colFirst" scope="col">
                        Modifier and Type
                      </th>
                      <th class="colLast" scope="col">
                        Method and Description
                      </th>
                    </tr>
                    <?gen [Methods] begin 
                          class = 'altRow'
                    ?>
                    <?gen [MethodsLoop] method : methods ?>
                    <?gen [Method] begin 
                                   methodName = method.name,
                                   result = method.ownedParameter->any(param | param.direction = uml::ParameterDirectionKind::return),
                                   class = if class = 'altColor' then 'altRow' else 'altColor' endif
                    ?>
                    <tr id="i0" class="???">
                      <?gen attr class = class ?>
                      <td class="colFirst">
                        <code> <?gen if method.isStatic then 
						          'static ' 
                               else
                                    ''									  
						       endif 
					      ?>
                          <?gen if method.isAbstract then
						          'abstract ' 
                               else
                                    ''									  
						       endif 
					      ?>
						  <?gen if method.isLeaf then 
						          'final ' 
                               else
                                  ''									  
						       endif 
					      ?> 
						  <?gen if method.visibility <> uml::VisibilityKind::package then 
                                 method.visibility.toString() + ' '
                              else
                                   ''								   
						      endif 
						  ?>
                          <?gen parameterType def object : uml::TypedElement ?>
                          <?gen [Writing the non-void type] begin when object <> null                                                             
                                  type = object.type 
                          ?>
                          <?gen                             begin when type <> null 
                                  typeName = type.name,
                                  qualifiedName = type.qualifiedName.replaceAll('::', '.').replace('[^\\.]*\\.', ''),
                                  packageQualifiedName = type.eContainer().qualifiedName,
                                  packageQualifiedName = packageQualifiedName.replaceAll('::', '.').replace('[^\\.]*\\.', ''),
                                  isTypeInScope = allNamedElements->exists(n : uml::NamedElement | n = type)
                          ?>
                          <?gen begin when isTypeInScope                                   
                          ?>
                          <a
                          href="??? class_details.html"
                          title="class in ???">
                           <?gen attr href = url + '/' + qualifiedName + '_details.xhtml' ?>
                           <?gen attr title = 'class in ' + packageQualifiedName ?>
                           <?gen typeName ?>
                          </a>                        
                          <?gen end ?>
                          <?gen begin when not isTypeInScope ?>
                          <?gen typeName ?>
                          <?gen end ?>
                          <?gen if object.upperValue <> null then
						         if object.upperValue.isComputable() then
  						            if object.upperValue.unlimitedValue() <> '' or object.upperValue.integerValue() > 1 then
								       '[]'
								    else
								       ''
								    endif
						         else
							        ''
						         endif
							  else
							     ''
							  endif
                          ?>
                          <?gen end  export: type ?>
                          <?gen [Writing the non-void type] end export: type ?>
                          <?gen [Writing the void type] begin when object = null or type = null ?>void
                          <?gen [Writing the void type] end ?>
                          <?gen parameterType end ?>

                          <?gen <Insert parameterType result> ?>
<?gen <Insert parameterType OrderedSet{} > ?>
                          </code>
                      </td>
                      <td class="colLast">
                        <code><span class="memberNameLink"><a
                        href="thisFile#id???">
                        <?gen attr href = url + '/' + classfilename + '#' + method.id() ?>
                        <?gen methodName ?></a></span>(<?gen [ParametersWrite] begin when not method.ownedParameter->isEmpty()
                                                             parameters = method.ownedParameter->select(param | param.direction <> uml::ParameterDirectionKind::return),
                                                             commas = parameters->collect(p | ', ')->subSequence(1, parameters->size() - 1)->including('')
                                                       ?>
                                                       <?gen [ParametersLoop] parameter : parameters, comma : commas ?>
                                                       <?gen <Insert parameterType parameter> ?>
                                                       <?gen ' ' + parameter.name + comma ?>
                                                       <?gen [ParametersLoop] end ?>
                                                       <?gen [ParametersWrite] end ?>)</code>
                        <?gen begin when not clazz.ownedComment->isEmpty()
                              comment = clazz.ownedComment->first() ?>
                        <div class="block">
			            <?gen comment.literalComment() ?>
                        <!--  begin-user-doc -->
                        <!--  end-user-doc -->
                        </div>                        
                      </td>
                    </tr>
                    <?gen [Method] end export: class ?>
                    <?gen [MethodsLoop] end ?>
                    <?gen [Methods] end ?>
                  </tbody>
                </table>
                <ul class="blockList">
                  <li class="blockList">
                    <a
                    id="methods.inherited.from.class.org.eclipse.emf.common.EMFPlugin">
                     <!--  --> </a>
                    <h3>
                      Methods inherited from class org.eclipse.emf.common.EMFPlugin
                    </h3>
                    <code>getDelegateResourceLocators, getPluginLogger,
                    getPrimaryResourceLocator, getSymbolicName, log, main</code>
                  </li>
                </ul>
                <ul class="blockList">
                  <li class="blockList">
                    <a
                    id="methods.inherited.from.class.org.eclipse.emf.common.util.DelegatingResourceLocator">
                     <!--  --> </a>
                    <h3>
                      Methods inherited from class org.eclipse.emf.common.util.DelegatingResourceLocator
                    </h3>
                    <code>delegatedGetImage, delegatedGetString, doGetImage,
                    doGetString, extensionFor, getBaseURL, getImage, getString,
                    getString, getString, getString, setShouldTranslate,
                    shouldTranslate</code>
                  </li>
                </ul>
                <ul class="blockList">
                  <li class="blockList">
                    <a id="methods.inherited.from.class.java.lang.Object">
                     <!--  --> </a>
                    <h3>
                      Methods inherited from class java.lang.Object
                    </h3>
                    <code>clone, equals, finalize, getClass, hashCode,
                    notify, notifyAll, toString, wait, wait, wait</code>
                  </li>
                </ul>
                <ul class="blockList">
                  <li class="blockList">
                    <a
                    id="methods.inherited.from.class.org.eclipse.emf.common.util.ResourceLocator">
                     <!--  --> </a>
                    <h3>
                      Methods inherited from interface org.eclipse.emf.common.util.ResourceLocator
                    </h3>
                    <code>getBaseURL, getImage, getString, getString,
                    getString, getString</code>
                  </li>
                </ul>
              </li>
            </ul>
          <?gen [Methods Summary 2] end ?>
          <?gen [Methods Summary 1] end ?>
          </li>
        </ul>
      </div>
      <div class="details">
        <ul class="blockList">
          <li class="blockList">
            <!--  ============ FIELD DETAIL =========== -->
            <ul class="blockList">
              <li class="blockList">
                <a id="field.detail">
                 <!--  --> </a>
                <h3>
                  Field Detail
                </h3>
                <a id="INSTANCE">
                 <!--  --> </a>
                <ul class="blockListLast">
                  <li class="blockList">
                    <h4>
                      INSTANCE
                    </h4>
<pre xml:space="preserve">public static final <a
                      href="http://download.eclipse.org/modeling/mdt/uml2/javadoc/5.1.0/org/eclipse/uml2/uml/profile/standard/StandardPlugin.html"
                      title="class in org.eclipse.uml2.uml.profile.standard">StandardPlugin</a> INSTANCE</pre>
                    <div class="block">
                      Keep track of the singleton.
                       <!--  begin-user-doc -->
                       <!--  end-user-doc -->
                    </div>
                  </li>
                </ul>
              </li>
            </ul>
            <!--  ========= CONSTRUCTOR DETAIL ======== -->
            <ul class="blockList">
              <li class="blockList">
                <a id="constructor.detail">
                 <!--  --> </a>
                <h3>
                  Constructor Detail
                </h3>
                <a id="StandardPlugin--">
                 <!--  --> </a>
                <ul class="blockListLast">
                  <li class="blockList">
                    <h4>
                      StandardPlugin
                    </h4>
<pre xml:space="preserve">public StandardPlugin()</pre>
                    <div class="block">
                      Create the instance.
                       <!--  begin-user-doc -->
                       <!--  end-user-doc -->
                    </div>
                  </li>
                </ul>
              </li>
            </ul>
            <!--  ============ METHOD DETAIL ========== -->
            <ul class="blockList">
              <li class="blockList">
                <a id="method.detail">
                 <!--  --> </a>
                <h3>
                  Method Detail
                </h3>
                <a id="getPluginResourceLocator--">
                 <!--  --> </a>
                <ul class="blockList">
                  <li class="blockList">
                    <h4>
                      getPluginResourceLocator
                    </h4>
<pre xml:space="preserve">public org.eclipse.emf.common.util.ResourceLocator getPluginResourceLocator()</pre>
                    <div class="block">
                      Returns the singleton instance of the Eclipse plugin.
                       <!--  begin-user-doc -->
                       <!--  end-user-doc -->
                    </div>
                    <dl>
                      <dt>
                        <span class="overrideSpecifyLabel">Specified by:</span>
                      </dt>
                      <dd>
                        <code>getPluginResourceLocator</code> in
                        class <code>org.eclipse.emf.common.EMFPlugin</code>
                      </dd>
                      <dt>
                        <span class="returnLabel">Returns:</span>
                      </dt>
                      <dd>
                        the singleton instance.
                      </dd>
                    </dl>
                  </li>
                </ul>
                <a id="getPlugin--">
                 <!--  --> </a>
                <ul class="blockListLast">
                  <li class="blockList">
                    <h4>
                      getPlugin
                    </h4>
<pre xml:space="preserve">public static <a
                      href="http://download.eclipse.org/modeling/mdt/uml2/javadoc/5.1.0/org/eclipse/uml2/uml/profile/standard/StandardPlugin.Implementation.html"
                      title="class in org.eclipse.uml2.uml.profile.standard">StandardPlugin.Implementation</a> getPlugin()</pre>
                    <div class="block">
                      Returns the singleton instance of the Eclipse plugin.
                       <!--  begin-user-doc -->
                       <!--  end-user-doc -->
                    </div>
                    <dl>
                      <dt>
                        <span class="returnLabel">Returns:</span>
                      </dt>
                      <dd>
                        the singleton instance.
                      </dd>
                    </dl>
                  </li>
                </ul>
              </li>
            </ul>
          </li>
        </ul>
      </div>
    </div>
    <!--  ========= END OF CLASS DATA ========= -->
    <!--  ======= START OF BOTTOM NAVBAR ====== -->
    <div class="bottomNav">
      <a id="navbar.bottom">
       <!--  --> </a>
      <div class="skipNav">
        <a
        href="???#skip.navbar.bottom"
        title="Skip navigation links">
		<?gen attr href = url + '/' + classfilename + '#skip.navbar.bottom' ?>
		Skip navigation links		
		</a>	
      </div>
      <a id="navbar.bottom.firstrow">
       <!--  --> </a>
      <ul class="navList" title="Navigation">
        <li>
          <a
          href="???">
		  <?gen attr href = url + '/' + classfilename ?>
		  Overview
		  </a>
        </li>
        <li>
          <a href="???">
		  <?gen attr href = url + '/' + outPackagefilename ?>
		  Package
		  </a>		  
        </li>
        <li class="navBarCell1Rev">
          Class
        </li>
        <li>
          <a
          href="http://download.eclipse.org/modeling/mdt/uml2/javadoc/5.1.0/org/eclipse/uml2/uml/profile/standard/class-use/StandardPlugin.html">Use</a>
        </li>
        <li>
          <a
          href="http://download.eclipse.org/modeling/mdt/uml2/javadoc/5.1.0/org/eclipse/uml2/uml/profile/standard/package-tree.html">Tree</a>
        </li>
        <li>
          <a
          href="http://download.eclipse.org/modeling/mdt/uml2/javadoc/5.1.0/deprecated-list.html">Deprecated</a>
        </li>
        <li>
          <a
          href="http://download.eclipse.org/modeling/mdt/uml2/javadoc/5.1.0/index-files/index-1.html">Index</a>
        </li>
        <li>
          <a
          href="http://download.eclipse.org/modeling/mdt/uml2/javadoc/5.1.0/help-doc.html">Help</a>
        </li>
      </ul>
      <div class="aboutLanguage">
        Powered by Xmlgen
      </div>
    </div>
    <div class="subNav">
    <?gen <Insert classifier_navigation previousClass, nextClass> ?>
      <ul class="navList">
        <li>
          <a
          href="http://download.eclipse.org/modeling/mdt/uml2/javadoc/5.1.0/index.html?org/eclipse/uml2/uml/profile/standard/StandardPlugin.html">Frames</a>
        </li>
        <li>
          <a
          href="http://download.eclipse.org/modeling/mdt/uml2/javadoc/5.1.0/org/eclipse/uml2/uml/profile/standard/StandardPlugin.html">No Frames</a>
        </li>
      </ul>
      <ul class="navList" id="allclasses_navbar_bottom" style="display: block;">
        <li>
          <a
          href="http://download.eclipse.org/modeling/mdt/uml2/javadoc/5.1.0/allclasses-noframe.html">All Classes</a>
        </li>
      </ul>
      <div><script type="text/javascript" xml:space="preserve">//<![CDATA[
  allClassesLink = document.getElementById("allclasses_navbar_bottom");
  if(window==top) {
    allClassesLink.style.display = "block";
  }
  else {
    allClassesLink.style.display = "none";
  }
  //
//]]></script>
      </div>
      <div>
        <ul class="subNavList">
          <li>
            Summary: 
          </li>
          <li>
            <a
            href="http://download.eclipse.org/modeling/mdt/uml2/javadoc/5.1.0/org/eclipse/uml2/uml/profile/standard/StandardPlugin.html#nested.class.summary">Nested</a> | 
          </li>
          <li>
            <a
            href="http://download.eclipse.org/modeling/mdt/uml2/javadoc/5.1.0/org/eclipse/uml2/uml/profile/standard/StandardPlugin.html#field.summary">Field</a> | 
          </li>
          <li>
            <a
            href="http://download.eclipse.org/modeling/mdt/uml2/javadoc/5.1.0/org/eclipse/uml2/uml/profile/standard/StandardPlugin.html#constructor.summary">Constr</a> | 
          </li>
          <li>
            <a
            href="http://download.eclipse.org/modeling/mdt/uml2/javadoc/5.1.0/org/eclipse/uml2/uml/profile/standard/StandardPlugin.html#method.summary">Method</a>
          </li>
        </ul>
        <ul class="subNavList">
          <li>
            Detail: 
          </li>
          <li>
            <a
            href="http://download.eclipse.org/modeling/mdt/uml2/javadoc/5.1.0/org/eclipse/uml2/uml/profile/standard/StandardPlugin.html#field.detail">Field</a> | 
          </li>
          <li>
            <a
            href="http://download.eclipse.org/modeling/mdt/uml2/javadoc/5.1.0/org/eclipse/uml2/uml/profile/standard/StandardPlugin.html#constructor.detail">Constr</a> | 
          </li>
          <li>
            <a
            href="http://download.eclipse.org/modeling/mdt/uml2/javadoc/5.1.0/org/eclipse/uml2/uml/profile/standard/StandardPlugin.html#method.detail">Method</a>
          </li>
        </ul>
      </div>
      <a id="skip.navbar.bottom">
       <!--  --> </a>
    </div>
    <!--  ======== END OF BOTTOM NAVBAR ======= -->
  </body>
</html>